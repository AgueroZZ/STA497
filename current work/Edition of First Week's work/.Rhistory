?inla
library(INLA)
?inla
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(INLA)
library(survival)
bladder.CoxPh <- coxph(Surv(times, censored)~ number + size + recur + frailty.gaussian(id), data = data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(INLA)
library(survival)
bladder.CoxPh <- coxph(Surv(times, censored)~ number + size + recur + frailty.gaussian(id), data = data)
data <- as_tibble(bladder1)
data <- select(data,-c(rsize,rtumor,enum))
data <- data %>% mutate(censored = status==0)
for (i in 1:length(data$censored)) {
if(data$censored[i]) data$censored[i] <- 0
else data$censored[i] <- 1
}
data <- data %>% mutate(times = stop-start)
head(data)
tail(data)
bladder.CoxPh <- coxph(Surv(times, censored)~ number + size + recur + frailty.gaussian(id), data = data)
summary(bladder.CoxPh)
formula = inla.surv(times, censored) ~  number + size + recur + f(id, model = "iid")
bladder.INLA <- inla(formula, control.compute = list(dic = TRUE), family = "coxph",
data = data, control.hazard=list(model="rw2", n.intervals=20))
bladder.INLA$summary.fixed
formula = inla.surv(times, censored) ~ -1 + number + size + recur + f(id, model = "iid")
bladder.INLA <- inla(formula, control.compute = list(dic = TRUE), family = "coxph",
data = data, control.hazard=list(model="rw2", n.intervals=20))
bladder.INLA$summary.fixed
formula = inla.surv(times, censored) ~  number + size + recur + f(id, model = "iid")
bladder.INLA <- inla(formula, control.compute = list(dic = TRUE), family = "coxph",
data = data, control.hazard=list(model="rw2", n.intervals=20))
bladder.INLA$summary.fixed
summary(bladder.INLA)
formula = inla.surv(times, censored) ~  number + size + recur + f(id, model = "iid")
bladder.INLA <- inla(formula, control.compute = list(dic = TRUE), family = "coxph",
data = data, control.hazard=list(model="rw1", n.intervals=20))
summary(bladder.INLA)
formula = inla.surv(times, censored) ~  -1 + number + size + recur + f(id, model = "iid")
bladder.INLA <- inla(formula, control.compute = list(dic = TRUE), family = "coxph",
data = data, control.hazard=list(model="rw1", n.intervals=20))
summary(bladder.INLA)
ï¼Ÿbrinla::bri.basehaz.plot()
library(brinla)
?basehaz
