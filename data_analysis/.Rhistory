source('~/Documents/GitHub/STA497/data_analysis/data_analysis_2.R')
source('~/Desktop/Stats Research/current work/code/00-load-packages.R')
source('~/Documents/GitHub/STA497/data_analysis/1.function_for_PH_Model.R')
set.seed(123)
cores <- 6
RW2BINS <- 50
POLYNOMIAL_DEGREE <- 1
PARALLEL_EXECUTION <- TRUE
N <- nrow(Leuk)
data <- sample_n(Leuk, N, replace = FALSE, weight = NULL, .env = NULL)
data <- data_frame(tpi=data$tpi,times = data$time, entry = rep(0,nrow(data)),censoring = data$cens)
data <- rename(data, exposure = tpi)
data <- data %>% as_tibble() %>%
mutate(exposure_binned = bin_covariate(exposure,bins = RW2BINS,type = "quantile"))
data <- arrange_data(data)
data$ID <- 1:nrow(data)
Alist <- list()
Alist$exposure <- create_alist_element(data$exposure_binned)
model_data <- list(
A = Alist,
M = Alist %>% map("A") %>% map(ncol) %>% reduce(sum) - 1,
n = length(unique(data$ID)),
X = matrix(poly(data$exposure,degree = POLYNOMIAL_DEGREE,raw = TRUE))
)
model_data$theta_logprior <- function(theta,prior_alpha = .5,prior_u = log(10)) {
lambda <- -log(prior_alpha)/prior_u
log(lambda/2) - lambda * exp(-theta/2) - theta/2
}
model_data$beta_logprec <- log(.5)
model_data$diffmat <- create_diff_matrix(model_data$n)
model_data$lambdainv <- create_full_dtcp_matrix(model_data$n)
model_data$Xd <- model_data$diffmat %*% model_data$X
model_data$p <- ncol(model_data$X)
model_data$Nd <- model_data$n - 1
model_data$Ne <- model_data$n
model_data$Wd <- model_data$M + model_data$p + model_data$Nd
model_data$Wdf <- model_data$M + model_data$p + model_data$Ne
model_data$times <- data$times
model_data$censoring <- data$censoring
model_data$entry <- data$entry
model_data$ID <- data$ID
model_data$diffmat <- create_diff_matrix(model_data$n)
model_data$lambdainv <- create_full_dtcp_matrix(model_data$n)
model_data$A$exposure$Ad <- model_data$diffmat %*% model_data$A$exposure$A
model_data$Xd <- model_data$diffmat %*% model_data$X
thetagrid <- as.list(seq(1,14,by = 0.5)) # This is the log(precision)
# Random effect model specification data
model_data$modelspec <- model_data$A %>%
purrr::map("model") %>%
purrr::map2(.,names(.),~tibble(covariate = .y,model = .x)) %>%
purrr::reduce(bind_rows)
model_data$vectorofcolumnstoremove <- round(RW2BINS/2)
cat("Finished creating model data!\n")
formula <- inla.surv(times,censoring) ~ -1 + exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE), control.hazard = list(constr = F) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][1]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
formula <- inla.surv(times,censoring) ~ -1 + exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE), control.hazard = list(constr = F) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][1]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
vv <- model_data$vectorofcolumnstoremove
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][1]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
ggplot(geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta"))
ggplot() + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
simplot <- tibble(
x = sort(unique(model_data$A$exposure$u)),
mypoly = fit_poly(x) - fit_poly(x[vv]),
mymean = mypoly + margmeanall,
mymeanlower = mymean - 2*margsd,
mymeanupper = mymean + 2*margsd
) %>%
ggplot(aes(x = x)) +
theme_light() +
geom_line(aes(y = meanhere),colour = 'orange',linetype = 'solid') +
labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term;",
x = "tpi", y = "eta") +
theme(text = element_text(size = PLOT_TEXT_SIZE))
simplot <- tibble(
x = sort(unique(model_data$A$exposure$u))
) %>%
ggplot(aes(x = x)) +
theme_light() +
geom_line(aes(y = meanhere),colour = 'orange',linetype = 'solid') +
labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term;",
x = "tpi", y = "eta") +
theme(text = element_text(size = PLOT_TEXT_SIZE))
simplot <- tibble(
x = sort(unique(model_data$A$exposure$u))
) %>%
ggplot(aes(x = x)) +
theme_light() +
geom_line(aes(y = meanhere),colour = 'orange',linetype = 'solid') +
labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term;",
x = "tpi", y = "eta") +
theme(text = element_text(size = 0.8))
simplot
meanhere <- fhat-fhat[vv] + mypoly
meanhere
simplot <- tibble(
x = sort(unique(model_data$A$exposure$u))
) %>%
ggplot(aes(x = x)) +
theme_light() +
geom_line(aes(y = meanhere),colour = 'orange',linetype = 'solid') +
labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term;",
x = "tpi", y = "eta") +
theme(text = element_text(size = 0.8))
simplot
mypoly
formula <- inla.surv(times,censoring) ~ -1 + exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE), control.hazard = list(constr = F) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][1]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
formula <- inla.surv(times,censoring) ~ -1 + exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][1]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
meanhere
formula <- inla.surv(times,censoring) ~ exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][2]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
meanhere
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][2]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
meanhere
formula <- inla.surv(times,censoring) ~ exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][2]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
meanhere
formula <- inla.surv(times,censoring) ~ -1 + exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE), control.hazard = list(model = "rw2", constr = F) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][2]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
formula <- inla.surv(times,censoring) ~ -1 + exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE), control.hazard = list(model = "rw2", constr = F) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][1]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
meanhere
formula <- inla.surv(times,censoring) ~  exposure + f(exposure_binned,model = 'rw2',constr = F)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][2]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
meanhere
formula <- inla.surv(times,censoring) ~  exposure + f(exposure_binned,model = 'rw2',constr = T)
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE) , data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][2]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat-fhat[vv] + mypoly
new_compare <- simplot + geom_line(aes(y = meanhere),colour = "blue") +labs(title = "Linear Term vs Liner Term plus Smooth Term curve",
subtitle = "Red = Linear Term; Orange = Linear Term + Smooth Term; Blue = INLA ; Green = GAM",
x = "Covariate", y = "eta")
new_compare
meanhere
cnsA1 <- rep(0,RW2BINS)
cnsA1[model_data$vectorofcolumnstoremove] <- 1
cnsA2 <- rep(0,RW2BINS)
cnsA2[model_data$vectorofcolumnstoremove-1] <- 1
cnsA <- rbind(cnsA1,cnsA2)
conse <- matrix(0, nrow = 2, ncol = 1)
formula <- inla.surv(times,censoring) ~ exposure + f(exposure_binned,model = 'rw2',constr = F, extraconstr = list(A=cnsA,e=conse))
Inlaresult <- inla(formula = formula, control.compute = list(dic=TRUE),control.inla = list(strategy = 'gaussian',int.strategy = 'grid', correct = FALSE),data = data, family = "coxph")
fhat <- Inlaresult$summary.random$exposure_binned$mean
fhat[model_data$vectorofcolumnstoremove] = 0
fhat[model_data$vectorofcolumnstoremove-1] = 0
plotINLA <- data.frame(exposure = Inlaresult$summary.random$exposure_binned$ID)
fit_poly2 <- function(x){
xx <- poly(x,degree = POLYNOMIAL_DEGREE,raw = T)
as.numeric(xx %*% cbind(Inlaresult$summary.fixed[,1][2]))
}
mypoly = fit_poly2(sort(unique(model_data$A$exposure$u))) - fit_poly2(plotINLA$exposure[vv])
meanhere <- fhat + mypoly
meanhere
